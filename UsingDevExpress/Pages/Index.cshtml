@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <script>
        var myModel = @Json.Serialize(Model.MyModelList)
    </script>

    @(Html.DevExtreme().Chart()
        .ID("chart")
        .Title("Top 5 Most Populated States in US")
        .ArgumentAxis(c => 
            c.Label(l => 
                l.CustomizeHint(
                    @<text>
                        function(arg){
                            console.log("arg here",arg);
                            var title = ""
                            myModel.forEach(d => {
                                if(arg.value == d.Name){
                                    title = `This is the title text: ${d.Area}`
                                }
                            })
                            return title
                        }
                    </text>
                )
                .Visible(true)
            )
         )
        .Series(s => s
        .Add()
        .Type(SeriesType.Bar)
        .ArgumentField("Name")
        .ValueField("Population")
        .Name("Population")
        )
        .CommonAnnotationSettings(c => c.Series("Population")
        .Type(AnnotationType.Custom)
        .AllowDragging(true)
        .Template(@<text>
            <svg class='annotation'>
                <image href="<%- argument%>" width="60" height="40" />
                <rect class="border" x="0" y="0" />
                <text x="70" y="25" class="state"><%- argument %></text>
                <text x="0" y="60">
                    <tspan class="caption">Capital:</tspan><tspan class="capital" dx="5"><%- data.Capital %></tspan><tspan dy="14" x="0" class="caption">Population:</tspan><tspan class="population" dx="5"><%- formatNumber(data.Population) %></tspan><tspan dy="14" x="0" class="caption">Area:</tspan><tspan class="area" dx="5"><%- formatNumber(data.Area) %></tspan><tspan dx="5">km</tspan><tspan class="sup" dy="-2">2</tspan>
                </text>
            </svg>
        </text>))
        .Annotations(a =>
        {
            foreach (var dataItem in Model.MyModelList)
            {
                a.Add().Argument(dataItem.Name)
                .Data(dataItem).Opacity(0.3);
            }
        })
        .Legend(l => l.Visible(false)).OnInitialized("Test")
        .DataSource(Model.MyModelList)
        )

    <script>
        var formatNumber = new Intl.NumberFormat("en-US", { maximumFractionDigits: 0 }).format;

        //$(document).ready(function(){
         //   $("#chart").dxChart()
        //})

        function Test(e){
            console.log("test called")
            var instance = $("#chart").dxChart("instance")

            instance.on("")
        }
    </script>

</div>
